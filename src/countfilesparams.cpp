// DO NOT EDIT ** This file was generated by mugicpp ** DO NOT EDIT
#include "countfilesparams.h"

CountFilesParams::CountFilesParams() : mCacheFileList(true), mTotal(-1), mFiltered(-1) {
}
CountFilesParams::CountFilesParams(const QString& path, const RegExpPath& filter, bool notBinary)
    : mPath(path), mFilter(filter), mCacheFileList(true), mTotal(-1), mFiltered(-1),
      mNotBinary(notBinary) {
}
CountFilesParams::CountFilesParams(const QString& path, const RegExpPath& filter,
                                   bool cacheFileList, int total, int filtered, bool notBinary)
    : mPath(path), mFilter(filter), mCacheFileList(cacheFileList), mTotal(total),
      mFiltered(filtered), mNotBinary(notBinary) {
}
QString CountFilesParams::path() const {
    return mPath;
}
void CountFilesParams::setPath(const QString& value) {
    mPath = value;
}
RegExpPath CountFilesParams::filter() const {
    return mFilter;
}
void CountFilesParams::setFilter(const RegExpPath& value) {
    mFilter = value;
}
bool CountFilesParams::cacheFileList() const {
    return mCacheFileList;
}
void CountFilesParams::setCacheFileList(bool value) {
    mCacheFileList = value;
}
int CountFilesParams::total() const {
    return mTotal;
}
void CountFilesParams::setTotal(int value) {
    mTotal = value;
}
int CountFilesParams::filtered() const {
    return mFiltered;
}
void CountFilesParams::setFiltered(int value) {
    mFiltered = value;
}
bool CountFilesParams::notBinary() const {
    return mNotBinary;
}
void CountFilesParams::setNotBinary(bool value) {
    mNotBinary = value;
}
